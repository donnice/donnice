--Create table
CREATE TABLE LOCATION(
    Loc_ID INTEGER,
    CITY VARCHAR2(100),
    STATE VARCHAR2(100),
    COUNTRY VARCHAR2(100),
    PRIMARY KEY(LOC_ID));

CREATE TABLE FB_USER(
    User_ID VARCHAR2(100),
    Firstname CHAR(20) NOT NULL,
    Lastname CHAR(20) NOT NULL,
    Year_of_birth NUMBER(38),
    Month_of_birth NUMBER(38),
    Day_of_birth NUMBER(38),
    Gender VARCHAR2(100),
    PRIMARY KEY(User_ID));

CREATE TABLE Hometown(
    User_ID VARCHAR2(100),
    Loc_ID NUMBER(38),
    PRIMARY KEY(User_ID),
    FOREIGN KEY(User_ID)REFERENCES FB_USER,
    FOREIGN KEY(Loc_ID)REFERENCES LOCATION);

CREATE TABLE Currentloc(
    User_ID VARCHAR2(100),
    Loc_ID NUMBER(38),
    PRIMARY KEY(User_ID),
    FOREIGN KEY(User_ID)REFERENCES FB_USER,
    FOREIGN KEY(Loc_ID)REFERENCES LOCATION);

CREATE TABLE Education(
    Education_ID NUMBER(38),
    INSTITUTION_NAME VARCHAR2(100),
    PROGRAM_YEAR NUMBER(38),
    PROGRAM_CONCENTRATION CHAR(100),
    PROGRAM_DEGREE VARCHAR2(100),
    PRIMARY KEY(EDUCATION_ID));

CREATE TABLE ACCEPT_EDUCATION(
    User_ID VARCHAR2(100),
    Education_ID NUMBER(38),
    PRIMARY KEY(USER_ID,EDUCATION_ID),
    FOREIGN KEY(USER_ID)REFERENCES FB_USER,
    FOREIGN KEY(EDUCATION_ID)REFERENCES EDUCATION);

CREATE TABLE FRIENDS(
    User1_ID VARCHAR2(100),
    User2_ID VARCHAR2(100),
    PRIMARY KEY(User1_ID,User2_ID),
    FOREIGN KEY(User1_ID) REFERENCES FB_USER,
    FOREIGN KEY(User2_ID) REFERENCES FB_USER);

CREATE TABLE Album(
    Album_ID VARCHAR2(100),
    User_ID VARCHAR2(100) NOT NULL,
    Album_link VARCHAR(2000) NOT NULL,
    Album_name VARCHAR(200) NOT NULL,
    Album_modified_time DATE NOT NULL,
    Album_created_time DATE NOT NULL,
    Album_visibility VARCHAR(100) NOT NULL,
    PRIMARY KEY(Album_ID),
    FOREIGN KEY(User_ID)REFERENCES FB_USER);

CREATE TABLE Photo(
   Photo_ID VARCHAR2(100),
   Album_ID VARCHAR2(100) NOT NULL,
   Photo_modified_time DATE NOT NULL,
   Photo_created_time DATE NOT NULL,
   Photo_link VARCHAR(2000) NOT NULL,
   Photo_caption VARCHAR(2000),
   PRIMARY KEY(Photo_ID),
   FOREIGN KEY(Album_ID)REFERENCES Album);

CREATE TABLE Cover_Photo(
    Cover_ID VARCHAR2(100) NOT NULL,
    Album_ID VARCHAR2(100),
    PRIMARY KEY(Album_ID),UNIQUE(COVER_ID),
    FOREIGN KEY(Cover_ID)REFERENCES Photo,
    FOREIGN KEY(Album_ID)REFERENCES Photo);

CREATE TABLE Tags(
    Photo_ID VARCHAR2(100),
    Tag_subjected_ID VARCHAR2(100),
    Tag_x_coordinate NUMBER NOT NULL,
    Tag_y_coordinate NUMBER NOT NULL,
    Tag_created_time TIMESTAMP(6),
    PRIMARY KEY(Photo_ID,Tag_subjected_ID),
    FOREIGN KEY(Photo_ID)REFERENCES Photo,
    FOREIGN KEY(Tag_subjected_ID)REFERENCES FB_USER);

CREATE TABLE Message(
    Message_time DATE,
    Content CHAR(200),
    PRIMARY KEY(Message_time));

CREATE TABLE Send(
    Sender_ID VARCHAR2(100),
    Receiver_ID VARCHAR2(100),
    Message_time DATE,
    PRIMARY KEY(Sender_ID,RECEIVER_ID,MESSAGE_TIME),
    FOREIGN KEY(SENDER_ID)REFERENCES FB_USER,
    FOREIGN KEY(RECEIVER_ID)REFERENCES FB_USER,
    FOREIGN KEY(MESSAGE_TIME)REFERENCES MESSAGE);

CREATE TABLE Events(
    Event_ID VARCHAR2(100) PRIMARY KEY,
    EVENT_CREATOR_ID VARCHAR2(100) NOT NULL,
    Event_name VARCHAR2(100) NOT NULL,
    Event_tagline VARCHAR2(1000),
    Event_description VARCHAR2(4000),
    Event_host VARCHAR2(100) NOT NULL,
    Event_type VARCHAR(100),
    Event_subtype VARCHAR2(100),
    Event_location VARCHAR(100),
    Event_START_TIME TIMESTAMP(6) NOT NULL,
    Event_END_TIME TIMESTAMP(6) NOT NULL,
    FOREIGN KEY(EVENT_CREATOR_ID)REFERENCES FB_USER);

CREATE TABLE TAKE_PLACE(
    LOC_ID NUMBER(38),
    Event_ID VARCHAR2(100) PRIMARY KEY,
    FOREIGN KEY(EVENT_ID) REFERENCES EVENTS);

CREATE TABLE Participate(
    Event_ID VARCHAR2(100),
    Participator_ID VARCHAR2(100),
    Status VARCHAR(100),
    PRIMARY KEY(Event_ID, Participator_ID),
    FOREIGN KEY(Event_ID) REFERENCES Events,
    FOREIGN KEY(Participator_ID)REFERENCES FB_USER);
--droptable
DROP TABLE PARTICIPATE;

DROP TABLE EVENTS;

DROP TABLE SEND;

DROP TABLE MESSAGE;

DROP TABLE TAGS;

DROP TABLE COVER_PHOTO;

DROP TABLE PHOTO;

DROP TABLE ALBUM;

DROP TABLE FRIENDS;

DROP TABLE ACCEPT_EDUCATION;

DROP TABLE EDUCATION;

DROP TABLE FB_USER;

DROP TABLE LOCATION;

--load data
CREATE TABLE new_user as(SELECT * FROM daneliza.public_user_information);

CREATE TABLE new_friends as (SELECT * FROM daneliza.public_are_friends);

CREATE TABLE new_photo as (SELECT * FROM daneliza.public_photo_information);

create table new_tag as (SELECT * FROM DANELIZA.PUBLIC_TAG_INFORMATION);

CREATE TABLE NEW_EVENT AS (SELECT * FROM DANELIZA.PUBLIC_EVENT_INFORMATION);

CREATE SEQUENCE Loc_sequence
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE edu_sequence
START WITH 1
INCREMENT BY 1;

CREATE TRIGGER loc_trigger 
BEFORE INSERT ON LOCATION
FOR EACH ROW 
BEGIN 
SELECT loc_sequence.NEXTVAL INTO :new.loc_id from dual; 
end;
.
run;

CREATE TRIGGER edu_trigger 
BEFORE INSERT ON education
FOR EACH ROW 
BEGIN 
SELECT edu_sequence.NEXTVAL INTO :new.education_id from dual; 
end;
.
run;

INSERT INTO location (city, state, country)
SELECT DISTINCT hometown_city, hometown_state, hometown_country FROM new_user
UNION
SELECT DISTINCT current_city, current_state, current_country FROM new_user
UNION 
SELECT DISTINCT event_city, event_state, event_country FROM daneliza.public_event_information;
 
Insert into FB_USER(user_id,FIRSTNAME,LASTNAME,YEAR_OF_BIRTH,MONTH_OF_BIRTH,DAY_OF_BIRTH,GENDER,hometown_ID,current_ID)select distinct u.user_id, u.FIRST_NAME,u.LAST_NAME,u.YEAR_OF_BIRTH,u.MONTH_OF_BIRTH,u.DAY_OF_BIRTH,u.GENDER,l.loc_id , a.loc_id from new_user u, location l,location a  where u.hometown_city = l.city AND u.hometown_state = l.state AND u.hometown_country = l.country AND u.current_city = a.city AND u.current_state = a.state AND u.current_country = a.country;

INSERT INTO EDUCATION(INSTITUTION_NAME, PROGRAM_YEAR,PROGRAM_CONCENTRATION,PROGRAM_DEGREE)SELECT DISTINCT INSTITUTION_NAME, PROGRAM_YEAR, PROGRAM_CONCENTRATION,PROGRAM_DEGREE FROM NEW_USER;

INSERT INTO ACCEPT_EDUCATION(USER_ID, EDUCATION_ID)SELECT DISTINCT U.USER_ID,E.EDUCATION_ID FROM NEW_USER U, EDUCATION E WHERE U.INSTITUTION_NAME = E.INSTITUTION_NAME AND U.PROGRAM_YEAR = E.PROGRAM_YEAR AND U.PROGRAM_CONCENTRATION = E.PROGRAM_CONCENTRATION AND U.PROGRAM_DEGREE = E.PROGRAM_DEGREE;

INSERT INTO FRIENDS(USER1_ID, USER2_ID)SELECT USER1_ID, USER2_ID FROM NEW_FRIENDS;

INSERT INTO Album(Album_ID, USER_ID, Album_link, Album_name, Album_modified_time, Album_created_time, Album_visibility) SELECT DISTINCT ALBUM_ID, OWNER_ID, Album_link, ALBUM_NAME, ALBUM_MODIFIED_TIME, ALBUM_CREATED_TIME, ALBUM_VISIBILITY FROM NEW_PHOTO;

insert into photo(photo_id, album_id, photo_modified_time, photo_created_time, photo_link, photo_caption)select photo_id, album_id, photo_modified_time, photo_created_time, photo_link, photo_caption from new_photo;

Insert INTO COVER_PHOTO(COVER_ID, ALBUM_ID)SELECT DISTINCT COVER_PHOTO_ID, ALBUM_ID FROM NEW_PHOTO;

INSERT INTO TAGS(PHOTO_ID, TAG_SUBJECTED_ID, TAG_X_COORDINATE,TAG_Y_COORDINATE,TAG_CREATED_TIME)SELECT DISTINCT PHOTO_ID,TAG_SUBJECT_ID,TAG_X_COORDINATE,TAG_Y_COORDINATE,TAG_CREATED_TIME FROM NEW_TAG;

INSERT INTO EVENTS(EVENT_ID, EVENT_CREATOR_ID,EVENT_NAME,EVENT_TAGLINE,EVENT_DESCRIPTION,EVENT_HOST,EVENT_TYPE,EVENT_SUBTYPE,EVENT_LOCATION,EVENT_START_TIME,EVENT_END_TIME,Event_location_ID)SELECT distinct E.EVENT_ID,E.EVENT_CREATOR_ID,E.EVENT_NAME,E.EVENT_TAGLINE,E.EVENT_DESCRIPTION,E.EVENT_HOST,E.EVENT_TYPE,E.EVENT_SUBTYPE,E.EVENT_LOCATION,E.EVENT_START_TIME,E.EVENT_END_TIME,l.loc_id FROM location l, NEW_EVENT E where E.EVENT_city = l.city AND E.EVENT_state = l.state AND E.EVENT_country = l.country;

